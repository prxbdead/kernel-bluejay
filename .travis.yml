language: bash

services:
  - docker

os: linux
dist: focal

jobs:
  include:
    - stage: build
      name: Build Kernel with KernelSU & SUSFS
      script:
        - |          
          echo "Step 1: Install repo tool"
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod 755 ~/bin/repo
          export PATH=~/bin:$PATH

          echo "Step 2: Set up SSH for HentaiOS GitLab"
          mkdir -p ~/.ssh
          echo "$GITLAB_SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
          ssh -o StrictHostKeyChecking=no git@ssh.gitlab.hentaios.com -p 2052

          echo "Step 3: Clone HentaiOS kernel source"
          mkdir -p ./builds/kernel
          cd ./builds/kernel
          repo init --depth=1 -u https://gitlab.hentaios.com/hentaios-gs-6.x/manifest.git/ -b Vallhound
          repo --trace sync -c --no-tags --fail-fast -v -j$(nproc --all) --force-sync

          echo "Step 4: Apply KernelSU-Next patches"
          cd ./aosp
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -

          echo "Step 5: Apply SUSFS patches"
          cd ..
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "gki-android14-6.1"
          cp susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./kernel/aosp/KernelSU-Next/
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./kernel/aosp/
          cp susfs4ksu/kernel_patches/fs/* ./kernel/aosp/fs/
          cp susfs4ksu/kernel_patches/include/linux/* ./kernel/aosp/include/linux/
          cd ./kernel/aosp/KernelSU-Next
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          cd ..
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true

          echo "Step 6: Add TheWildJames's patches"
          cd ..
          git clone https://github.com/TheWildJames/kernel_patches.git
          cp kernel_patches/apk_sign.c_fix.patch ./kernel/aosp/
          cp kernel_patches/core_hook.c_fix.patch ./kernel/aosp/
          cp kernel_patches/selinux.c_fix.patch ./kernel/aosp/
          cd ./kernel/aosp
          patch -p1 -F 3 < apk_sign.c_fix.patch
          patch -p1 -F 3 < core_hook.c_fix.patch
          patch -p1 -F 3 < selinux.c_fix.patch

          echo "Step 7: Configure KernelSU and SUSFS"
          echo "CONFIG_KSU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./arch/arm64/configs/gki_defconfig
          rm -rf ./common/android/abi_gki_protected_exports_aarch64
          rm -rf ./common/android/abi_gki_protected_exports_x86_64
          sed -i '2s/check_defconfig//' ./build.config.gki

          echo "Step 8: Build Kernel For Raviole"
          cd ../
          exec tools/bazel run \
              --kernel_package=@//aosp \
              --lto=thin \
              --config=raviole \
              --verbose_failures \
              //private/devices/google/raviole:gs101_raviole_dist "$@"

          echo "Step 9: Upload build artifact"
          mv ./kernel/out/raviole/dist/boot.img $TRAVIS_BUILD_DIR/kernel-raviole-boot.img
      after_script:
        - |
          echo "Build completed successfully!"
